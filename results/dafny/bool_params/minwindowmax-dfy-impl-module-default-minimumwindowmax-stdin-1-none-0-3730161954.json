{
    "args": {
        "dafny_file": "/benchmarks/MinWindowMax.dfy",
        "procedure_name": "Impl$$_module.__default.MinimumWindowMax",
        "option_selector_name": "stdin",
        "results_filename": "/result/minwindowmax-dfy-impl-module-default-minimumwindowmax-stdin-1-none-0-3730161954.json",
        "seed": "0",
        "num_instances": 1,
        "dafny_command": "/opt/dafny/dafny",
        "only_instances": null,
        "commit_hash": ""
    },
    "commit_hash": "",
    "total_runtime": {
        "start": 1651368666.3844306,
        "start_readable": "2022-05-01T03:31:06.384431",
        "end": 1651368676.7042801,
        "end_readable": "2022-05-01T03:31:16.704280",
        "duration": "10.3198494911"
    },
    "instances": [
        {
            "id": 0,
            "cmd": [
                "/opt/dafny/dafny",
                "/benchmarks/MinWindowMax.dfy",
                "/proc:Impl$$_module.__default.MinimumWindowMax",
                "/xml:/tmp/tmpm60s8hdp.xml",
                "/proverOpt:O:rewriter.elim_to_real=true"
            ],
            "diversification": [
                "/proverOpt:O:rewriter.elim_to_real=true"
            ],
            "stdout": [
                "b''",
                "b'Dafny program verifier finished with 1 verified, 0 errors'"
            ],
            "stderr": [],
            "xml": {
                "version": "3.4.2.40221",
                "command": "/opt/dafny/Dafny.dll /benchmarks/MinWindowMax.dfy /proc:Impl$$_module.__default.MinimumWindowMax /xml:/tmp/tmpm60s8hdp.xml /proverOpt:O:rewriter.elim_to_real=true",
                "methods": [
                    {
                        "name": "Impl$$_module.__default.MinimumWindowMax",
                        "startTime": "2022-05-01 01:31:08+00:00",
                        "finished": true,
                        "endTime": "2022-05-01 01:31:16+00:00",
                        "duration": 8.4738449,
                        "outcome": "correct"
                    }
                ]
            }
        }
    ]
}