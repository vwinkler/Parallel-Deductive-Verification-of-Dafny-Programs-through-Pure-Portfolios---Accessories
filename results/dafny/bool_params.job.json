[
  {
    "[include]problem": [
      {
        "dfy-path": "test.dfy",
        "procedurename": "Impl$$_module.__default.Triple",
        "estimated_runtime": "00:00:10"
      },
      {
        "dfy-path": "06-ThreadOwnership.dfy",
        "procedurename": "Impl$$_module.DoubleReadMethod.Run",
        "estimated_runtime": "00:01:45"
      },
      {
        "dfy-path": "07-CounterThreadOwnership.dfy",
        "procedurename": "Impl$$_module.IncrementerMethod.RunLoopBody",
        "estimated_runtime": "00:00:24"
      },
      {
        "dfy-path": "09-CounterNoStateMachine.dfy",
        "procedurename": "Impl$$_module.__default.Incrementer",
        "estimated_runtime": "00:03:00"
      },
      {
        "dfy-path": "10-SequenceInvariant.dfy",
        "procedurename": "Impl$$_module.__default.Incrementer",
        "estimated_runtime": "00:02:15"
      },
      {
        "dfy-path": "11-MutexGuard2.dfy",
        "procedurename": "Impl$$_module.__default.SetData",
        "estimated_runtime": "00:03:00"
      },
      {
        "dfy-path": "12-MutexLifetime-long.dfy",
        "[include]": [
          {
            "procedurename": "Impl$$_module.__default.SetData",
            "estimated_runtime": "00:20:00"
          },
          {
            "procedurename": "Impl$$_module.__default._default_Main",
            "estimated_runtime": "00:20:00"
          },
          {
            "procedurename": "Impl$$_module.__default.Acquire",
            "estimated_runtime": "00:05:54"
          },
          {
            "procedurename": "Impl$$_module.MutexGuardU32.__ctor",
            "estimated_runtime": "00:05:09"
          },
          {
            "procedurename": "Impl$$_module.Lifetime.__ctor",
            "estimated_runtime": "00:00:42"
          },
          {
            "procedurename": "Impl$$_module.OutlivesClaim.__ctor",
            "estimated_runtime": "00:00:24"
          },
          {
            "procedurename": "Impl$$_module.OwnedU32.__ctor",
            "estimated_runtime": "00:00:12"
          }
        ]
      },
      {
        "dfy-path": "12-MutexLifetime-short.dfy",
        "[include]": [
          {
            "procedurename": "Impl$$_module.MutexGuardU32.__ctor",
            "estimated_runtime": "00:03:00"
          },
          {
            "procedurename": "Impl$$_module.Lifetime.__ctor",
            "estimated_runtime": "00:00:36"
          },
          {
            "procedurename": "Impl$$_module.OutlivesClaim.__ctor",
            "estimated_runtime": "00:00:18"
          },
          {
            "procedurename": "Impl$$_module.OwnedU32.__ctor",
            "estimated_runtime": "00:00:12"
          }
        ]
      },
      {
        "dfy-path": "InductivePredicates.dfy",
        "[include]": [
          {
            "procedurename": "Impl$$Alt.__default.MyLemma__NotSoNice_h",
            "estimated_runtime": "00:01:54"
          },
          {
            "procedurename": "Impl$$Alt.__default.MyLemma__Nicer_h",
            "estimated_runtime": "00:01:48"
          }
        ]
      },
      {
        "dfy-path": "UnionFind.dfy",
        "[include]": [
          {
            "procedurename": "Impl$$M3.UnionFind.Join",
            "estimated_runtime": "00:01:45"
          },
          {
            "procedurename": "Impl$$_module.__default._default_Main",
            "estimated_runtime": "00:00:21"
          }
        ]
      },
      {
        "dfy-path": "b4_times.dfy",
        "[include]": [
          {
            "procedurename": "Impl$$_module.Map.Remove",
            "estimated_runtime": "00:01:36"
          },
          {
            "procedurename": "Impl$$_module.Map.Add",
            "estimated_runtime": "00:00:12"
          }
        ]
      },
      {
        "dfy-path": "VectorUpdate.dfy",
        "procedurename": "Impl$$_module.__default._default_Main",
        "estimated_runtime": "00:01:33"
      },
      {
        "dfy-path": "IMaps.dfy",
        "procedurename": "Impl$$_module.__default.m8",
        "estimated_runtime": "00:01:33"
      },
      {
        "dfy-path": "COST-verif-comp-2011-4-FloydCycleDetect.dfy",
        "procedurename": "Impl$$_module.Node.AnalyzeList",
        "estimated_runtime": "00:01:09"
      },
      {
        "dfy-path": "RlimitMultiplier.dfy",
        "procedurename": "Impl$$_module.__default.L",
        "estimated_runtime": "00:00:36"
      },
      {
        "dfy-path": "SnapshotableTrees.dfy",
        "procedurename": "Impl$$SnapTreeTestHarness.__default._default_Main",
        "estimated_runtime": "00:00:27"
      },
      {
        "dfy-path": "SchorrWaite.dfy",
        "procedurename": "Impl$$SnapTreeTestHarness.__default._default_Main",
        "estimated_runtime": "00:00:27"
      },
      {
        "dfy-path": "MultiDimArray.dfy",
        "[include]": [
          {
            "procedurename": "Impl$$SnapTreeTestHarness.__default._default_Main",
            "estimated_runtime": "00:00:27"
          },
          {
            "procedurename": "Impl$$_module.A.M4",
            "estimated_runtime": "00:00:12"
          },
          {
            "procedurename": "Impl$$_module.A.M3",
            "estimated_runtime": "00:00:12"
          },
          {
            "procedurename": "Impl$$_module.A.M2",
            "estimated_runtime": "00:00:12"
          },
          {
            "procedurename": "Impl$$_module.A.M1",
            "estimated_runtime": "00:00:12"
          },
          {
            "procedurename": "CheckWellformed$$_module.A.M3",
            "estimated_runtime": "00:00:12"
          },
          {
            "procedurename": "CheckWellformed$$_module.A.M2",
            "estimated_runtime": "00:00:12"
          }
        ]
      },
      {
        "dfy-path": "MinWindowMax.dfy",
        "procedurename": "Impl$$_module.__default.MinimumWindowMax",
        "estimated_runtime": "00:00:27"
      },
      {
        "dfy-path": "TreeBarrier.dfy",
        "procedurename": "Impl$$_module.Node.barrier",
        "estimated_runtime": "00:00:24"
      },
      {
        "dfy-path": "Bitvectors.dfy",
        "procedurename": "Impl$$_module.__default.Unary",
        "estimated_runtime": "00:00:18"
      },
      {
        "dfy-path": "SmallestMissingNumber-functional.dfy",
        "procedurename": "Impl$$_module.IncrementerMethod.RunLoopBody",
        "estimated_runtime": "00:00:18"
      },
      {
        "dfy-path": "git-issue-356.dfy",
        "[include]": [
          {
            "procedurename": "Impl$$M.__default.Test3b",
            "estimated_runtime": "00:00:12"
          },
          {
            "procedurename": "Impl$$M.__default.Test2d",
            "estimated_runtime": "00:00:12"
          }
        ]
      },
      {
        "dfy-path": "git-issue106.dfy",
        "procedurename": "Impl$$_module.__default.L",
        "estimated_runtime": "00:00:12"
      },
      {
        "dfy-path": "COST-verif-comp-2011-3-TwoDuplicates.dfy",
        "procedurename": "Impl$$_module.__default.Search",
        "estimated_runtime": "00:00:12"
      },
      {
        "dfy-path": "BreadthFirstSearch.dfy",
        "procedurename": "Impl$$_module.BreadthFirstSearch.BFS",
        "estimated_runtime": "00:00:12"
      }
    ],
    "seed": [
      "0"
    ],
    "optionselector": "stdin",
    "stdin": [
      "/proverOpt:O:pi.block_loop_patterns=false",
      "/proverOpt:O:pi.pull_quantifiers=false",
      "/proverOpt:O:pi.use_database=true",
      "/proverOpt:O:tactic.olve_eqs.context_solve=false",
      "/proverOpt:O:tactic.olve_eqs.ite_solver=false",
      "/proverOpt:O:tactic.olve_eqs.theory_solver=false",
      "/proverOpt:O:model.compact=false",
      "/proverOpt:O:model.completion=true",
      "/proverOpt:O:model.inline_def=true",
      "/proverOpt:O:model.partial=true",
      "/proverOpt:O:model.v1=true",
      "/proverOpt:O:model.v2=true",
      "/proverOpt:O:opt.dump_benchmarks=true",
      "/proverOpt:O:opt.dump_models=true",
      "/proverOpt:O:opt.elim_01=false",
      "/proverOpt:O:opt.enable_lns=true",
      "/proverOpt:O:opt.enable_sat=false",
      "/proverOpt:O:opt.enable_sls=true",
      "/proverOpt:O:opt.maxlex.enable=false",
      "/proverOpt:O:opt.maxres.add_upper_bound_block=true",
      "/proverOpt:O:opt.maxres.hill_climb=false",
      "/proverOpt:O:opt.maxres.maximize_assignment=true",
      "/proverOpt:O:opt.maxres.pivot_on_correction_set=false",
      "/proverOpt:O:opt.maxres.wmax=true",
      "/proverOpt:O:opt.pb.compile_equality=true",
      "/proverOpt:O:opt.pp.neat=false",
      "/proverOpt:O:opt.pp.wcnf=true",
      "/proverOpt:O:parallel.enable=true",
      "/proverOpt:O:nnf.ignore_labels=true",
      "/proverOpt:O:nnf.k_hack=true",
      "/proverOpt:O:algebraic.factor=false",
      "/proverOpt:O:combined_.ignore_solver1=true",
      "/proverOpt:O:rcf.clean_denominators=false",
      "/proverOpt:O:rcf.lazy_algebraic_normalization=false",
      "/proverOpt:O:rcf.use_prem=false",
      "/proverOpt:O:model_evaluator.array_as_stores=false",
      "/proverOpt:O:model_evaluator.array_equalities=false",
      "/proverOpt:O:model_evaluator.completion=true",
      "/proverOpt:O:ackermannization.eager=false",
      "/proverOpt:O:ackermannization.inc_sat_backend=true",
      "/proverOpt:O:ackermannization.at_backend=true",
      "/proverOpt:O:nl.check_lemmas=true",
      "/proverOpt:O:nl.factor=false",
      "/proverOpt:O:nl.inline_vars=true",
      "/proverOpt:O:nl.log_lemmas=true",
      "/proverOpt:O:nl.minimize_conflicts=true",
      "/proverOpt:O:nl.randomize=false",
      "/proverOpt:O:nl.reorder=false",
      "/proverOpt:O:nl.huffle_vars=true",
      "/proverOpt:O:nl.implify_conflicts=false",
      "/proverOpt:O:par.ignore_bad_patterns=false",
      "/proverOpt:O:par.ignore_user_patterns=true",
      "/proverOpt:O:rewriter.algebraic_number_evaluator=false",
      "/proverOpt:O:rewriter.arith_ineq_lhs=true",
      "/proverOpt:O:rewriter.arith_lhs=true",
      "/proverOpt:O:rewriter.bit2bool=false",
      "/proverOpt:O:rewriter.blast_distinct=true",
      "/proverOpt:O:rewriter.blast_eq_value=true",
      "/proverOpt:O:rewriter.blast_select_store=true",
      "/proverOpt:O:rewriter.bv_extract_prop=true",
      "/proverOpt:O:rewriter.bv_ite2id=true",
      "/proverOpt:O:rewriter.bv_le_extra=true",
      "/proverOpt:O:rewriter.bv_not_simpl=true",
      "/proverOpt:O:rewriter.bv_sort_ac=true",
      "/proverOpt:O:rewriter.cache_all=true",
      "/proverOpt:O:rewriter.coalesce_chars=false",
      "/proverOpt:O:rewriter.elim_and=true",
      "/proverOpt:O:rewriter.elim_ite=false",
      "/proverOpt:O:rewriter.elim_rem=true",
      "/proverOpt:O:rewriter.elim_sign_ext=false",
      "/proverOpt:O:rewriter.elim_to_real=true",
      "/proverOpt:O:rewriter.eq2ineq=true",
      "/proverOpt:O:rewriter.expand_nested_stores=true",
      "/proverOpt:O:rewriter.expand_power=true",
      "/proverOpt:O:rewriter.expand_select_ite=true",
      "/proverOpt:O:rewriter.expand_select_store=true",
      "/proverOpt:O:rewriter.expand_store_eq=true",
      "/proverOpt:O:rewriter.expand_tan=true",
      "/proverOpt:O:rewriter.flat=false",
      "/proverOpt:O:rewriter.gcd_rounding=true",
      "/proverOpt:O:rewriter.hi_div0=false",
      "/proverOpt:O:rewriter.hi_fp_unspecified=true",
      "/proverOpt:O:rewriter.hoist_ite=true",
      "/proverOpt:O:rewriter.hoist_mul=true",
      "/proverOpt:O:rewriter.ignore_patterns_on_ground_qbody=false",
      "/proverOpt:O:rewriter.ite_extra_rules=true",
      "/proverOpt:O:rewriter.local_ctx=true",
      "/proverOpt:O:rewriter.mul2concat=true",
      "/proverOpt:O:rewriter.mul_to_power=true",
      "/proverOpt:O:rewriter.pull_cheap_ite=true",
      "/proverOpt:O:rewriter.push_ite_arith=true",
      "/proverOpt:O:rewriter.push_ite_bv=true",
      "/proverOpt:O:rewriter.push_to_real=false",
      "/proverOpt:O:rewriter.rewrite_patterns=true",
      "/proverOpt:O:rewriter.om=true",
      "/proverOpt:O:rewriter.ort_store=true",
      "/proverOpt:O:rewriter.ort_sums=true",
      "/proverOpt:O:rewriter.plit_concat_eq=true",
      "/proverOpt:O:fp.datalog.all_or_nothing_deltas=true",
      "/proverOpt:O:fp.datalog.compile_with_widening=true",
      "/proverOpt:O:fp.datalog.dbg_fpr_nonempty_relation_signature=true",
      "/proverOpt:O:fp.datalog.default_table_checked=true",
      "/proverOpt:O:fp.datalog.explanations_on_relation_level=true",
      "/proverOpt:O:fp.datalog.generate_explanations=true",
      "/proverOpt:O:fp.datalog.magic_sets_for_queries=true",
      "/proverOpt:O:fp.datalog.output_profile=true",
      "/proverOpt:O:fp.datalog.similarity_compressor=false",
      "/proverOpt:O:fp.datalog.subsumption=false",
      "/proverOpt:O:fp.datalog.unbound_compressor=false",
      "/proverOpt:O:fp.datalog.use_map_names=false",
      "/proverOpt:O:fp.pacer.ctp=false",
      "/proverOpt:O:fp.pacer.dump_benchmarks=true",
      "/proverOpt:O:fp.pacer.elim_aux=false",
      "/proverOpt:O:fp.pacer.eq_prop=false",
      "/proverOpt:O:fp.pacer.gpdr=true",
      "/proverOpt:O:fp.pacer.gpdr.bfs=false",
      "/proverOpt:O:fp.pacer.ground_pobs=false",
      "/proverOpt:O:fp.pacer.iuc.debug_proof=true",
      "/proverOpt:O:fp.pacer.iuc.old_hyp_reducer=true",
      "/proverOpt:O:fp.pacer.iuc.split_farkas_literals=true",
      "/proverOpt:O:fp.pacer.keep_proxy=false",
      "/proverOpt:O:fp.pacer.mbqi=false",
      "/proverOpt:O:fp.pacer.native_mbp=false",
      "/proverOpt:O:fp.pacer.p3.share_invariants=true",
      "/proverOpt:O:fp.pacer.p3.share_lemmas=true",
      "/proverOpt:O:fp.pacer.propagate=false",
      "/proverOpt:O:fp.pacer.push_pob=true",
      "/proverOpt:O:fp.pacer.q3=false",
      "/proverOpt:O:fp.pacer.q3.instantiate=false",
      "/proverOpt:O:fp.pacer.q3.qgen.normalize=false",
      "/proverOpt:O:fp.pacer.q3.use_qgen=true",
      "/proverOpt:O:fp.pacer.reach_dnf=false",
      "/proverOpt:O:fp.pacer.reset_pob_queue=false",
      "/proverOpt:O:fp.pacer.restarts=true",
      "/proverOpt:O:fp.pacer.simplify_lemmas_post=true",
      "/proverOpt:O:fp.pacer.simplify_lemmas_pre=true",
      "/proverOpt:O:fp.pacer.simplify_pob=true",
      "/proverOpt:O:fp.pacer.use_array_eq_generalizer=false",
      "/proverOpt:O:fp.pacer.use_bg_invs=true",
      "/proverOpt:O:fp.pacer.use_derivations=false",
      "/proverOpt:O:fp.pacer.use_euf_gen=true",
      "/proverOpt:O:fp.pacer.use_inc_clause=false",
      "/proverOpt:O:fp.pacer.use_inductive_generalizer=false",
      "/proverOpt:O:fp.pacer.use_lemma_as_cti=true",
      "/proverOpt:O:fp.pacer.use_lim_num_gen=true",
      "/proverOpt:O:fp.pacer.validate_lemmas=true",
      "/proverOpt:O:fp.pacer.weak_abs=false",
      "/proverOpt:O:fp.validate=true",
      "/proverOpt:O:fp.xform.array_blast=true",
      "/proverOpt:O:fp.xform.array_blast_full=true",
      "/proverOpt:O:fp.xform.bit_blast=true",
      "/proverOpt:O:fp.xform.coalesce_rules=true",
      "/proverOpt:O:fp.xform.coi=false",
      "/proverOpt:O:fp.xform.compress_unbound=false",
      "/proverOpt:O:fp.xform.elim_term_ite=true",
      "/proverOpt:O:fp.xform.fix_unbound_vars=true",
      "/proverOpt:O:fp.xform.inline_eager=false",
      "/proverOpt:O:fp.xform.inline_linear=false",
      "/proverOpt:O:fp.xform.inline_linear_branch=true",
      "/proverOpt:O:fp.xform.instantiate_arrays=true",
      "/proverOpt:O:fp.xform.instantiate_arrays.enforce=true",
      "/proverOpt:O:fp.xform.instantiate_quantifiers=true",
      "/proverOpt:O:fp.xform.magic=true",
      "/proverOpt:O:fp.xform.quantify_arrays=true",
      "/proverOpt:O:fp.xform.scale=true",
      "/proverOpt:O:fp.xform.slice=false",
      "/proverOpt:O:fp.xform.subsumption_checker=false",
      "/proverOpt:O:fp.xform.tail_simplifier_pve=false",
      "/proverOpt:O:fp.xform.transform_arrays=true",
      "/proverOpt:O:fp.arith.auto_config_simplex=true",
      "/proverOpt:O:fp.arith.bprop_on_pivoted_rows=false",
      "/proverOpt:O:fp.arith.dump_lemmas=true",
      "/proverOpt:O:fp.arith.eager_eq_axioms=false",
      "/proverOpt:O:fp.arith.enable_hnf=false",
      "/proverOpt:O:fp.arith.greatest_error_pivot=true",
      "/proverOpt:O:fp.arith.ignore_int=true",
      "/proverOpt:O:fp.arith.int_eq_branch=true",
      "/proverOpt:O:fp.arith.min=true",
      "/proverOpt:O:fp.arith.nl=false",
      "/proverOpt:O:fp.arith.nl.branching=false",
      "/proverOpt:O:fp.arith.nl.expp=true",
      "/proverOpt:O:fp.arith.nl.grobner=false",
      "/proverOpt:O:fp.arith.nl.horner=false",
      "/proverOpt:O:fp.arith.nl.nra=false",
      "/proverOpt:O:fp.arith.nl.order=false",
      "/proverOpt:O:fp.arith.nl.tangents=false",
      "/proverOpt:O:fp.arith.propagate_eqs=false",
      "/proverOpt:O:fp.arith.random_initial_value=true",
      "/proverOpt:O:fp.array.extensional=false",
      "/proverOpt:O:fp.array.weak=true",
      "/proverOpt:O:fp.auto_config=false",
      "/proverOpt:O:fp.bv.delay=false",
      "/proverOpt:O:fp.bv.enable_int2bv=false",
      "/proverOpt:O:fp.bv.eq_axioms=false",
      "/proverOpt:O:fp.bv.reflect=false",
      "/proverOpt:O:fp.bv.watch_diseq=true",
      "/proverOpt:O:fp.candidate_models=true",
      "/proverOpt:O:fp.clause_proof=true",
      "/proverOpt:O:fp.core.extend_nonlocal_patterns=true",
      "/proverOpt:O:fp.core.extend_patterns=true",
      "/proverOpt:O:fp.core.minimize=true",
      "/proverOpt:O:fp.core.validate=true",
      "/proverOpt:O:fp.dack.eq=true",
      "/proverOpt:O:fp.delay_units=true",
      "/proverOpt:O:fp.ematching=false",
      "/proverOpt:O:fp.induction=true",
      "/proverOpt:O:fp.macro_finder=true",
      "/proverOpt:O:fp.mbqi=false",
      "/proverOpt:O:fp.mbqi.trace=true",
      "/proverOpt:O:fp.pb.learn_complements=false",
      "/proverOpt:O:fp.pull_nested_quantifiers=true",
      "/proverOpt:O:fp.qi.profile=true",
      "/proverOpt:O:fp.quasi_macros=true",
      "/proverOpt:O:fp.refine_inj_axioms=false",
      "/proverOpt:O:fp.restricted_quasi_macros=true",
      "/proverOpt:O:fp.eq.split_w_len=false",
      "/proverOpt:O:fp.eq.validate=true",
      "/proverOpt:O:fp.tr.aggressive_length_testing=true",
      "/proverOpt:O:fp.tr.aggressive_unroll_testing=false",
      "/proverOpt:O:fp.tr.aggressive_value_testing=true",
      "/proverOpt:O:fp.tr.fast_length_tester_cache=true",
      "/proverOpt:O:fp.tr.fast_value_tester_cache=false",
      "/proverOpt:O:fp.tr.fixed_length_naive_cex=false",
      "/proverOpt:O:fp.tr.fixed_length_refinement=true",
      "/proverOpt:O:fp.tr.string_constant_cache=false",
      "/proverOpt:O:fp.tr.strong_arrangements=false",
      "/proverOpt:O:fp.theory_aware_branching=true",
      "/proverOpt:O:fp.theory_case_split=true",
      "/proverOpt:O:fp.early_prune=false",
      "/proverOpt:O:fp.random_offset=false",
      "/proverOpt:O:fp.rescore=false",
      "/proverOpt:O:fp.restart_init=true",
      "/proverOpt:O:fp.track_unsat=true",
      "/proverOpt:O:fp.vns_repick=true",
      "/proverOpt:O:fp.walksat=false",
      "/proverOpt:O:fp.walksat_repick=false",
      "/proverOpt:O:fp.walksat_ucb=false",
      "/proverOpt:O:fp.walksat_ucb_init=true"
    ],
    "num_instances": "1",
    "only_instances": null
  }
]
